/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author didiermurillo
 */

import java.awt.Graphics;
import java.util.Iterator;
import org.graphstream.graph.*;
import org.graphstream.graph.implementations.SingleGraph;
import org.graphstream.ui.spriteManager.*;
import org.graphstream.ui.graphicGraph.stylesheet.Style.*;
import org.graphstream.ui.graphicGraph.stylesheet.StyleConstants.Units;

public class VetanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VetanaPrincipal
     */
    public VetanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VetanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VetanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VetanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VetanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public  void run() {
                //new VetanaPrincipal().setVisible(true);
                Grafote();
            }
        });
        
    }
    
    public static void  Grafote(){
                Graph graph = new SingleGraph("tutorial 1");
                SpriteManager Sprites=new SpriteManager(graph);
                Sprite S=Sprites.addSprite("S1");
                graph.addAttribute("ui.stylesheet", styleSheet);
                graph.setStrict(false);
                graph.setAutoCreate(true);
                System.setProperty("org.graphstream.ui.renderer", "org.graphstream.ui.j2dviewer.J2DGraphRenderer");
                graph.addAttribute("ui.stylesheet","sprite { shape: flow; size: 5px; z-index: 0; } sprite#S1 { fill-color: red; } sprite#S2 { fill-color: #393; } sprite#S3 { fill-color: #3B3; }");
            
                graph.display();
                graph.addEdge("AB", "A", "B");
                graph.addEdge("BC", "B", "C");
                graph.addEdge("CA", "C", "A");
                graph.addEdge("AD", "A", "D");
                graph.addEdge("DE", "D", "E");
                graph.addEdge("DF", "D", "F");
                graph.addEdge("EF", "E", "F");
               
                for (Node node : graph) {
                    node.addAttribute("ui.label", node.getId());
                }  
                explore1("AB",S);
                
            } 
            
    public void explore(Node source,Sprite S) {
        Iterator<? extends Node> k = source.getBreadthFirstIterator();
        
        while (k.hasNext()) {
            Node next = k.next();
            next.setAttribute("ui.class", "marked");
            sleep();   
        }
    }
    public static void  explore1(String E,Sprite S) {
        double Movimiento=0.1;
        S.attachToEdge(E);
        while(Movimiento!=1){   
            S.setPosition(Movimiento);
            sleep();   
            Movimiento+=0.1;
        }    
    }
    
       
    


    protected  static String styleSheet =
        "node {" +
        "	fill-color: black;" +
        "}" +
        "node.marked {" +
        "	fill-color: red;" +
        "}";

    private static void sleep() {
        try { Thread.sleep(1000); } catch (Exception e) {}

    }
            


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}



